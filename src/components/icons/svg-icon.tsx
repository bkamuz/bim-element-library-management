import React from 'react';

interface IconProps {
  className?: string;
  size?: number;
}

// React компоненты с встроенным SVG кодом
const AwadaIconSvg = ({ className = "", size = 24 }: IconProps) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <mask id="mask0_116_424" style={{ maskType: "luminance" }} maskUnits="userSpaceOnUse" x="0" y="0" width="48" height="48">
      <path d="M48 0H0V48H48V0Z" fill="white"/>
    </mask>
    <g mask="url(#mask0_116_424)">
      <path d="M44 0H4C1.79086 0 0 1.79086 0 4V44C0 46.2091 1.79086 48 4 48H44C46.2091 48 48 46.2091 48 44V4C48 1.79086 46.2091 0 44 0Z" fill="currentColor"/>
      <path d="M19.2381 8H28.7619L44 40H32.5714L25.9048 25.8824V16.4706L15.4286 40H4L19.2381 8Z" fill="white"/>
    </g>
  </svg>
);

const ZigguratIconSvg = ({ className = "", size = 24 }: IconProps) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path d="M44 0.989258H4C1.79086 0.989258 0 2.78012 0 4.98926V44.9893C0 47.1984 1.79086 48.9893 4 48.9893H44C46.2091 48.9893 48 47.1984 48 44.9893V4.98926C48 2.78012 46.2091 0.989258 44 0.989258Z" fill="currentColor"/>
    <path d="M27.5898 45.6533H24.125L21.4385 4.34668H30.3545L27.5898 45.6533Z" fill="white"/>
    <path d="M20.249 12.791L20.7979 13.3389L13.8867 25.0195L20.7979 36.6992L18.4785 39.0176L4.59961 26.9717L2.06348 24.9941L4.61914 23.1221L18.4775 11.0176L20.249 12.791Z" fill="white"/>
    <path d="M45.8818 23.5117V26.4883L31.8047 31.7998V18.2012L45.8818 23.5117Z" fill="white"/>
  </svg>
);

const BimLibraryIconSvg = ({ className = "", size = 24 }: IconProps) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
<path fill-rule="evenodd" clip-rule="evenodd" d="M22 3.00098C22 1.34412 20.657 0.000976562 19 0.000976562H3C1.343 0.000976562 0 1.34412 0 3.00098V19C0 20.6569 1.343 22 3 22H19C20.657 22 22 20.6569 22 19V3.00098ZM22 29C22 27.3431 20.657 26 19 26H3C1.343 26 0 27.3431 0 29V45.001C0 46.6578 1.343 48.001 3 48.001H19C20.657 48.001 22 46.6578 22 45.001V29ZM29 0.000976562C27.343 0.000976562 26 1.34412 26 3.00098V19C26 20.6569 27.343 22 29 22H45C46.657 22 48 20.6569 48 19V3.00098C48 1.34412 46.657 0.000976562 45 0.000976562H29ZM48 29C48 27.3431 46.657 26 45 26H29C27.343 26 26 27.3431 26 29V45.001C26 46.6578 27.343 48.001 29 48.001H45C46.657 48.001 48 46.6578 48 45.001V29ZM45 37C45 41.4183 41.418 45 37 45C32.582 45 29 41.4183 29 37C29 32.5817 32.582 29 37 29C41.418 29 45 32.5817 45 37ZM37 43C40.314 43 43 40.3137 43 37C43 33.6863 40.314 31 37 31C33.686 31 31 33.6863 31 37C31 40.3137 33.686 43 37 43ZM38.732 7L37 4L35.268 7L30.938 14.5L29.206 17.5H32.67H41.33H44.794L43.062 14.5L38.732 7ZM35.845 10L37 8L38.155 10L40.175 13.5L41.33 15.5H39.021H34.979H32.67L33.825 13.5L35.845 10Z" fill="#697C8C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M19.548 21.9501L10.048 2H0.171005C0.0600052 2.31305 0 2.64998 0 3.00098V19C0 20.46 1.043 21.6765 2.425 21.9449L6.119 13.6471V22H19C19.187 22 19.37 21.9829 19.548 21.9501ZM21.83 46H15.286L6.119 26.5882V26H19C20.657 26 22 27.3431 22 29V45.001C22 45.3512 21.94 45.6875 21.83 46ZM26 35.5L31 46H26.17C26.06 45.6875 26 45.3512 26 45.001V35.5Z" fill="white"/>
<path d="M20 29C20 28.4476 19.5526 28 19 28H3C2.44741 28 2 28.4476 2 29V45.001C2 45.5534 2.44745 46.001 3 46.001H19C19.5526 46.001 20 45.5534 20 45.001V29ZM46 29C46 28.4476 45.5526 28 45 28H29C28.4474 28 28 28.4476 28 29V45.001C28 45.5534 28.4474 46.001 29 46.001H45C45.5526 46.001 46 45.5534 46 45.001V29ZM20 3.00098C20 2.44855 19.5526 2.00098 19 2.00098H3C2.44742 2.00098 2 2.44855 2 3.00098V19C2 19.5524 2.44742 20 3 20H19C19.5526 20 20 19.5524 20 19V3.00098ZM46 3.00098C46 2.44855 45.5526 2.00098 45 2.00098H29C28.4474 2.00098 28 2.44855 28 3.00098V19C28 19.5524 28.4474 20 29 20H45C45.5526 20 46 19.5524 46 19V3.00098ZM22 45.001C22 46.6576 20.6574 48.001 19 48.001H3C1.34255 48.001 0 46.6576 0 45.001V29C0 27.3432 1.34258 26 3 26H19C20.6574 26 22 27.3432 22 29V45.001ZM48 45.001C48 46.6576 46.6574 48.001 45 48.001H29C27.3426 48.001 26 46.6576 26 45.001V29C26 27.3432 27.3426 26 29 26H45C46.6574 26 48 27.3432 48 29V45.001ZM22 19C22 20.6568 20.6574 22 19 22H3C1.34259 22 2.06088e-06 20.6568 0 19V3.00098C0 1.34426 1.34258 0.000976562 3 0.000976562H19C20.6574 0.000976562 22 1.34426 22 3.00098V19ZM48 19C48 20.6568 46.6574 22 45 22H29C27.3426 22 26 20.6568 26 19V3.00098C26 1.34426 27.3426 0.000976562 29 0.000976562H45C46.6574 0.000976562 48 1.34426 48 3.00098V19Z" fill="#697C8C"/>
<path d="M37 8L41.33 15.5H32.67L37 8Z" fill="#6556D9"/>
<path d="M37 43C40.3137 43 43 40.3137 43 37C43 33.6863 40.3137 31 37 31C33.6863 31 31 33.6863 31 37C31 40.3137 33.6863 43 37 43Z" fill="#6556D9"/>
  </svg>
);

const ObjectManagerIconSvg = ({ className = "", size = 24 }: IconProps) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
<path fill-rule="evenodd" clip-rule="evenodd" d="M18 47.2439V20H47.668C45.764 8.64915 35.892 0 24 0C10.745 0 0 10.7452 0 24C0 35.183 7.649 44.5796 18 47.2439Z" fill="#697C8C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M0.785995 30.1161L8.119 13.6469V26.5881L17.286 45.9999H18V19.9999H20.619L12.492 2.93359C5.048 7.00873 0 14.9148 0 23.9999C0 26.1136 0.272995 28.1635 0.785995 30.1161Z" fill="white"/>
<path d="M24 0C35.892 0 45.764 8.64911 47.668 19.9999H18V47.2439C7.649 44.5796 0 35.1828 0 23.9999C0 10.7451 10.745 0 24 0ZM24 1.99999C11.8496 1.99999 2 11.8497 2 23.9999C2 33.3256 7.80482 41.2993 16 44.4998V17.9999H45.1719C42.561 8.76627 34.0692 1.99999 24 1.99999Z" fill="#697C8C"/>
<path d="M21 30V23H48V30H21Z" fill="#6556D9"/>
<path d="M21 39V32H48V39H21Z" fill="#6556D9"/>
<path d="M21 48V41H48V48H21Z" fill="#6556D9"/>
  </svg>
);

const ControlGeneratorIconSvg = ({ className = "", size = 24 }: IconProps) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
   <path fill-rule="evenodd" clip-rule="evenodd" d="M0 44C0 46.2091 1.79086 48 4 48H44C46.2091 48 48 46.2091 48 44V4C48 1.79086 46.2091 0 44 0H4C1.79086 0 0 1.79086 0 4V44ZM41 24C41 14.6112 33.3888 7 24 7C14.6112 7 7 14.6112 7 24C7 33.3888 14.6112 41 24 41C33.3888 41 41 33.3888 41 24Z" fill="#697C8C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.3333 2H23.6667L26.1566 7.13549C25.4503 7.04608 24.7305 7 24 7C14.6112 7 7.00002 14.6112 7.00002 24C7.00002 27.8086 8.25249 31.3248 10.368 34.1589L5.00006 46H1.00005L0.999957 21.25L2.33333 18.5L4.99999 13L10.3333 2ZM26.5076 40.8163L29 46H45L38.5769 32.7523C36.0127 37.0137 31.6327 40.0586 26.5076 40.8163Z" fill="white"/>
<path d="M24 38C31.732 38 38 31.732 38 24C38 16.268 31.732 10 24 10C16.268 10 10 16.268 10 24C10 31.732 16.268 38 24 38Z" fill="#6556D9"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M44 0C46.2091 0 48 1.79089 48 4V44C48 46.2091 46.2091 48 44 48H4C1.79089 48 0 46.2091 0 44V4C0 1.79089 1.79089 0 4 0H44ZM44 2H4C3.83472 2 3.67419 2.01917 3.51843 2.05762C3.41772 2.08252 3.31897 2.11536 3.22217 2.15637C3.11731 2.20068 3.0177 2.25305 2.92322 2.3136C2.80225 2.39099 2.68982 2.48181 2.58582 2.58582C2.48181 2.68982 2.39099 2.80225 2.3136 2.92322C2.25305 3.0177 2.20068 3.11731 2.15637 3.22217C2.11536 3.31885 2.08252 3.41772 2.05762 3.51843C2.01917 3.67419 2 3.83472 2 4V44C2 44.1653 2.01917 44.3258 2.05762 44.4816C2.08252 44.5823 2.11536 44.681 2.15637 44.7778C2.20068 44.8826 2.25305 44.9822 2.31348 45.0765C2.39099 45.1976 2.48169 45.3102 2.58582 45.4142C2.68982 45.5182 2.80225 45.609 2.92334 45.6864C3.0177 45.7469 3.11731 45.7993 3.22217 45.8436C3.31897 45.8846 3.41772 45.9175 3.51843 45.9424C3.67419 45.9808 3.83472 46 4 46H44C44.1653 46 44.3258 45.9808 44.4816 45.9424C44.5823 45.9175 44.681 45.8846 44.7778 45.8436C44.8826 45.7993 44.9821 45.7471 45.0765 45.6866C45.1975 45.6091 45.3102 45.5183 45.4142 45.4142C45.5183 45.3102 45.6091 45.1976 45.6865 45.0765C45.7469 44.9822 45.7993 44.8826 45.8436 44.7778C45.8846 44.681 45.9175 44.5823 45.9424 44.4814C45.9808 44.3257 46 44.1653 46 44V4C46 3.83472 45.9808 3.67419 45.9424 3.51843C45.9175 3.41772 45.8846 3.31897 45.8436 3.22217C45.7999 3.11885 45.7484 3.02052 45.689 2.92717L45.6865 2.92334C45.609 2.80249 45.5182 2.6897 45.4142 2.58582C45.3102 2.48181 45.1976 2.39099 45.0767 2.31348C44.9822 2.25305 44.8827 2.20068 44.7778 2.15637C44.681 2.11536 44.5823 2.08252 44.4816 2.05762C44.3258 2.01917 44.1653 2 44 2ZM26.6779 5.18738C25.7941 5.0625 24.9014 5 24 5C23.0984 5 22.2057 5.0625 21.3218 5.18738C20.9374 5.2417 20.5541 5.30798 20.173 5.38599C19.5555 5.51233 18.9475 5.6687 18.3488 5.85498C17.7581 6.03882 17.1763 6.25171 16.6038 6.4939C16.1129 6.70154 15.6327 6.92896 15.1627 7.17615C14.5492 7.49902 13.9535 7.85559 13.3755 8.24609C12.9064 8.56299 12.4531 8.89941 12.0156 9.25537C11.511 9.66602 11.0275 10.1025 10.5649 10.5649C10.1027 11.0273 9.66614 11.5107 9.25562 12.0153C8.89966 12.4528 8.56311 12.9062 8.24609 13.3755C7.85804 13.9499 7.50336 14.5419 7.18205 15.1516C7.17992 15.1556 7.17779 15.1596 7.17566 15.1637C6.92859 15.6333 6.70142 16.1133 6.4939 16.6038C6.25183 17.176 6.03894 17.7574 5.85522 18.3479C5.66882 18.9469 5.51233 19.5553 5.38599 20.173C5.30786 20.5544 5.2417 20.9377 5.18726 21.3226C5.06238 22.2063 5 23.0988 5 24C5 24.9015 5.0625 25.7942 5.18738 26.6781C5.2417 27.0627 5.30798 27.4457 5.38599 27.827C5.51233 28.4443 5.66858 29.0523 5.85474 29.6508C6.03858 30.2416 6.25171 30.8236 6.4939 31.3962C6.70166 31.8873 6.9292 32.3679 7.17664 32.838C7.49927 33.4513 7.85583 34.0468 8.24609 34.6245C8.56299 35.0935 8.89929 35.5468 9.25525 35.9841C9.66589 36.4889 10.1024 36.9725 10.5649 37.4351C11.0277 37.8977 11.5115 38.3345 12.0164 38.7452C12.4536 39.101 12.9066 39.4371 13.3755 39.7539C13.9534 40.1443 14.5491 40.501 15.1626 40.8237C15.6326 41.071 16.1129 41.2985 16.6038 41.5061C17.1754 41.7479 17.7562 41.9606 18.3462 42.1443C18.9457 42.3309 19.5547 42.4875 20.173 42.614C20.5544 42.6921 20.9376 42.7583 21.3224 42.8127C22.2061 42.9375 23.0986 43 24 43C24.9015 43 25.7941 42.9375 26.6779 42.8126C27.0626 42.7583 27.4457 42.692 27.827 42.614C28.4448 42.4875 29.0532 42.3312 29.6523 42.1448C30.2426 41.9609 30.8239 41.748 31.3962 41.5061C31.8808 41.3011 32.3552 41.0768 32.8195 40.8332C32.8252 40.8302 32.8308 40.8272 32.8365 40.8242C33.4503 40.5013 34.0463 40.1445 34.6245 39.7539C35.0938 39.4369 35.5471 39.1003 35.9847 38.7444C36.4893 38.3339 36.9727 37.8973 37.4351 37.4351C37.8977 36.9724 38.3343 36.4887 38.745 35.9838C39.1008 35.5465 39.4371 35.0934 39.7539 34.6245C40.1444 34.0465 40.5011 33.4507 40.8239 32.8372C41.071 32.3673 41.2985 31.887 41.5061 31.3962C41.7479 30.8245 41.9607 30.2435 42.1443 29.6536C42.3309 29.0541 42.4875 28.4452 42.614 27.827C42.692 27.4457 42.7583 27.0626 42.8126 26.6779C42.9375 25.7941 43 24.9015 43 24C43 23.0985 42.9375 22.2059 42.8126 21.3221C42.7583 20.9374 42.692 20.5543 42.614 20.173C42.4877 19.5553 42.3312 18.9469 42.1448 18.3479C42.1384 18.3272 42.1319 18.3064 42.1254 18.2859C41.946 17.7166 41.7396 17.1559 41.5061 16.6038C41.2987 16.1135 41.0717 15.6338 40.8247 15.1644C40.5017 14.5503 40.1448 13.954 39.7539 13.3755C39.4369 12.9062 39.1003 12.4528 38.7443 12.0153C38.3337 11.5107 37.8973 11.0273 37.4351 10.5649C36.9728 10.1028 36.4895 9.66638 35.9851 9.25598C35.5474 8.89978 35.0939 8.56323 34.6245 8.24609C34.0463 7.85547 33.4502 7.49866 32.8364 7.17578C32.3668 6.92871 31.8867 6.70142 31.3962 6.4939C30.824 6.25183 30.2424 6.03894 29.652 5.85522C29.053 5.66882 28.4447 5.51233 27.827 5.38599C27.446 5.30798 27.0635 5.24182 26.6791 5.1875L26.6779 5.18738ZM41 24C41 14.6112 33.3888 7 24 7C14.6112 7 7 14.6112 7 24C7 33.3888 14.6112 41 24 41C33.3888 41 41 33.3888 41 24Z" fill="#697C8C"/>
  </svg>
);

const ExportIconSvg = ({ className = "", size = 24 }: IconProps) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path d="M12 15H32V8.5L24 0H16H0V47.9999H32V32H12V15Z" fill="#697C8C"/>
    <path fillRule="evenodd" clipRule="evenodd" d="M15.2381 15L9.0476 2H0V25.1444L5.119 13.6471V26.5882L14.2857 46H30L23.3333 32H12V15H15.2381Z" fill="white"/>
    <path d="M24 0L32 8V15H12V32H32V48H0V0H24ZM2 46H30V34H10V13H30V8.82812L23.1719 2H2V46Z" fill="#697C8C"/>
    <path d="M15 29V18H35V11L47.5 23.5L35 36V29H15Z" fill="#6556D9"/>
  </svg>
);

const McpIconSvg = ({ className = "", size = 24 }: IconProps) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <rect x="2" y="6" width="20" height="12" rx="2" stroke="currentColor" strokeWidth="2"/>
    <circle cx="8" cy="12" r="2" stroke="currentColor" strokeWidth="2"/>
    <path d="M14 10H18" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
    <path d="M14 14H18" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
    <path d="M12 2V6" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
    <path d="M12 18V22" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
  </svg>
);

const AwadaTextSvg = ({ className = "", size = 24 }: IconProps) => {
  const height = (27.4001 / 283) * size;
  return (
    <svg
      width={size}
      height={height}
      viewBox="0 0 283 27.4001"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <g id="AWADA">
        <path id="A" d="M265.2 0.100098L283 27.4001L275.5 27.4001L263.5 9.0001L263.4 3.9001L258.3 12.4001L248.5 27.4001L241 27.4001L258.8 0.100098L265.2 0.100098Z" fill="currentColor" fillRule="nonzero" />
        <path id="D" d="M194.5 24.4L194.5 0L216.8 0.0999985C218.5 0.0999985 220 0.399998 221.4 1C222.9 1.6 224.1 2.5 225.1 3.5C226.2 4.6 227 5.9 227.5 7.4C228.1 8.9 228.3 10.5 228.3 12.1L228.3 18.5C228.2 19.7 227.9 20.8 227.4 21.9C226.9 22.9 226.2 23.9 225.3 24.7C224.4 25.5 223.3 26.2 222 26.6C220.8 27 219.4 27.3 217.9 27.3C217.7 27.3 217.5 27.3 217.3 27.3C217.1 27.3 216.9 27.3 216.7 27.3L194.5 27.4L194.5 24.4ZM200.9 8.8L200.9 21.5C206.3 21.4 212.1 21.2 217.4 21.4L217.8 21.4C218.6 21.4 219.3 21.3 219.9 21.1C220.5 20.9 221 20.6 221.4 20.3C221.7 20 221.9 19.7 222.1 19.4C222.3 19.1 222.4 18.7 222.4 18.3C222.4 18.2 222.4 18.1 222.4 18.1L222.4 12.2C222.4 11.3 222.3 10.5 222 9.7C221.7 9 221.3 8.3 220.8 7.8C220.3 7.3 219.8 6.9 219.1 6.7C218.5 6.40001 217.7 6.3 216.9 6.3C211.3 6.3 203.4 6.3 197.8 6.3L201 8.7L200.9 8.8Z" fill="currentColor" fillRule="nonzero" />
        <path id="A2" d="M163.6 0.100098L181.3 27.4001L173.8 27.4001L161.8 9.0001L161.8 3.9001L156.6 12.4001L146.8 27.4001L139.4 27.4001L157.1 0.100098L163.6 0.100098Z" fill="currentColor" fillRule="nonzero" />
        <path id="W" d="M121.6 0.100098L108.2 20.9001L107.8 21.6001L107.3 20.9001L93.8 0.100098L86.3 0.100098L72.9 20.9001L59.4 0.100098L51.9 0.100098L69.6 27.4001L76.1 27.4001L89.6 6.7001L91.2 4.0001L91.3 7.8001L104.1 27.4001L111.4 27.4001L129.1 0.100098L121.6 0.100098Z" fill="currentColor" fillRule="nonzero" />
        <path id="A3" d="M24.2002 0.100098L41.9002 27.4001L34.4002 27.4001L22.5002 9.0001L22.4002 3.9001L17.2002 12.4001L7.50024 27.4001L0.000244141 27.4001L17.7002 0.100098L24.2002 0.100098Z" fill="currentColor" fillRule="nonzero" />
      </g>
    </svg>
  );
};

// Карта доступных иконок
const iconMap = {
  'awada': AwadaIconSvg,
  'ziggurat': ZigguratIconSvg,
  'bim-library': BimLibraryIconSvg,
  'object-manager': ObjectManagerIconSvg,
  'control-generator': ControlGeneratorIconSvg,
  'dae-export': ExportIconSvg,
  'mcp': McpIconSvg,
  'awada-text': AwadaTextSvg,
} as const;

export type SvgIconName = keyof typeof iconMap;

interface SvgIconProps {
  name: SvgIconName;
  className?: string;
  size?: number;
}

export function SvgIcon({ name, className = "", size = 24 }: SvgIconProps) {
  const IconComponent = iconMap[name];
  
  if (!IconComponent) {
    console.warn(`SVG icon "${name}" not found`);
    return null;
  }

  return <IconComponent className={className} size={size} />;
}

// Компоненты-обертки для совместимости с существующим кодом
export const AwadaIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="awada" {...props} />;

export const ZigguratIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="ziggurat" {...props} />;

export const BimLibraryIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="bim-library" {...props} />;

export const ObjectManagerIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="object-manager" {...props} />;

export const ControlGeneratorIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="control-generator" {...props} />;

export const ExportIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="dae-export" {...props} />;

export const McpIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="mcp" {...props} />;

export const AwadaTextIcon = (props: Omit<SvgIconProps, 'name'>) => 
  <SvgIcon name="awada-text" {...props} />;